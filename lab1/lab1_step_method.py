def f(x: float) -> float:
    """
    Вычисляет значение функции f(x) = x ** 3 + 0.2 * x ** 2 + 0.5 * x - 1.2

    Параметры:
        x: Значение аргумента функции.

    Возвращаемое значение:
        Значение функции в точке x.
    """
    return x ** 3 + 0.2 * x ** 2 + 0.5 * x - 1.2


def step_method(func: callable, start: float, step: float) -> tuple[int, int]:
    """
    Находит отрезок, содержащий корень функции.

    Параметры:
        func: Функция f(x), корень которой необходимо найти.
        start: Начало отрезка поиска.
        step: Шаг при переборе точек на отрезке.

    Возвращаемое значение:
        Кортеж с началом и концом сегмента, содержащего корень функции.
    """
    x0, x1 = start, start + step
    while func(x0) * func(x1) >= 0:
        x0, x1 = x1, x1 + step
    return x0, x1


def main() -> None:
    # Использование методов
    a, b = step_method(func=f, start=0.8, step=0.01)
    print(f"Корень уравнения находится на отрезке: [{a:.3f}, {b:.3f}]")


if __name__ == "__main__":
    main()
